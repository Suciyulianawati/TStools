importFrom(tseries,kpss.test)
importFrom("grDevices", "colorRampPalette", "gray", "rainbow", "rgb")
importFrom("graphics", "abline", "axis", "box", "boxplot", "hist",
           "image", "legend", "lines", "mtext", "par", "plot",
           "points", "polygon", "text", "title", "layout")
importFrom("stats", "cor.test", "deltat", "density", "end", "fft",
           "frequency", "friedman.test", "is.ts", "loess", "median",
           "na.exclude", "na.omit", "nlminb", "optim", "pbinom",
           "predict", "qt", "qtukey", "quantile", "sd", "start", "stl",
           "time", "ts", "ts.plot", "uniroot")

import(forecast,zoo,MAPA,RColorBrewer,MASS,neuralnet,glmnet)

export(cmav,nemenyi,regopt,seasplot,mseastest,kdemode,decomp,
       coxstuart,wins,rowWins,colWins,theta,abc,xyz,abcxyz,
       nzlength,init.ets,mre,mre.plot,bias.coeff,
       graphmaker,MPE,MAPE,SMAPE,MASE,GMRAE,hm,
       sowhat,ro,intervals,intervalsSimulator,
       sma,geomean,
       residout,stlboot,get.opt.k,leadtrail,
       linscale,lagmatrix,
       elm,forecast.elm,
       mlp,forecast.mlp)

S3method(print,intervalStuff)
S3method(print,classseas)
S3method(print,classabc)
S3method(print,nemenyi)
S3method(print,elm)
S3method(print,mlp)
S3method(summary,classabc)
S3method(summary,classseas)
S3method(summary,nemenyi)
S3method(forecast,elm)
S3method(forecast,mlp)

#useDynLib(TStools)
